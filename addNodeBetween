import maya.cmds as cmds
# Adds either a remapHSV of a gamma between diffuseColor and whatever is plugged into it.
# node = alShader node

def addNodeBetween(shader):

    chooseNode = cmds.confirmDialog( title='Insert node', message='Choose node type', button=['HSV','Gamma', 'Cancel'], defaultButton='Yes', cancelButton='Cancel', dismissString='No' )
 
    diffuseUpstream = []

    
    def findDiffuseUpstream(connections):
       
        for i,x in enumerate(connections):
            if x == surfaceDiffuse:
                diffuseUpstream = connections[i+1]
                return diffuseUpstream
              
    
       
    print "Shader "+ str(shader)
    # if alshader
    surfaceDiffuse = '%s.diffuseColor' % shader
    connections = cmds.listConnections(shader, connections=True, p=True)
    
    #get position of diffuse colour
    diffusePosition = [i for i,x in enumerate(connections) if x == surfaceDiffuse]
    
    #get the name of the upstream node (if alshader '.diffuseColor' plug)
    diffuseUpstream = findDiffuseUpstream(connections)
    
    #nodename
    if chooseNode == 'HSV':
        nodeName = str(shader)+"_remapHSV"
        newNode = cmds.shadingNode('remapHsv', asShader=True, n=nodeName)
        
    if chooseNode == 'Gamma':
        nodeName = str(shader)+"_gamma"
        newNode = cmds.shadingNode('gammaCorrect', asShader=True, n=nodeName)
                
       
    #disconnect attributes
    print "Adding node between "+str(diffuseUpstream)+" and "+str(surfaceDiffuse)
    cmds.disconnectAttr(diffuseUpstream, surfaceDiffuse)
    
    # Diconnects and reconnects 

    if chooseNode == 'HSV':
        cmds.connectAttr( diffuseUpstream, newNode+".color" )
        cmds.connectAttr( newNode+".outColor", surfaceDiffuse  )
        
    if chooseNode == 'Gamma':
        cmds.connectAttr( diffuseUpstream, newNode+".value" )
        cmds.connectAttr( newNode+".outValue", surfaceDiffuse  )
    



"""
# To go on the shelf
import addNodeBetween
reload(addNodeBetween)

selectedShaders = cmds.ls(sl=True)

for i in selectedShaders:
    addNodeBetween(i)

"""



    
"""
# Older version adds a HSV to individual nodes on a per-shader selection.

diffuseUpstream = []
shader = cmds.ls(sl=True)



def findDiffuseUpstream(connections):
   
    for i,x in enumerate(connections):
        if x == surfaceDiffuse:
            diffuseUpstream = connections[i+1]
            return diffuseUpstream
          

   
print "Shader "+ str(shader)
# if alshader
surfaceDiffuse = '%s.diffuseColor' % shader[0]
connections = cmds.listConnections(shader, connections=True, p=True)

#get position of diffuse colour
diffusePosition = [i for i,x in enumerate(connections) if x == surfaceDiffuse]

#get the name of the upstream node (if alshader '.diffuseColor' plug)
diffuseUpstream = findDiffuseUpstream(connections)

#nodename
nodeName = str(shader[0])+"_remapHSV"
   
#disconnect attributes
print "Adding remap HSV between "+str(diffuseUpstream)+" and "+str(surfaceDiffuse)
cmds.disconnectAttr(diffuseUpstream, surfaceDiffuse)
    
# creates hsv node

newHsvNode = cmds.shadingNode('remapHsv', asShader=True, n=nodeName)
     
# Hooks them all up   
cmds.connectAttr( diffuseUpstream, newHsvNode+".color" )
cmds.connectAttr( newHsvNode+".outColor", surfaceDiffuse  )




"""
