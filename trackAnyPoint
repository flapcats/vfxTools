# track any point
"""
Select the camera you want a locator under to scale
! Assumes the camera has an imageplane attached upstream. 
! Assumes only one imagePlane

"""

import maya.cmds as cmds

# Select the camera
cam = cmds.ls(sl=True)
print cam
newcam = cmds.duplicate(cam, rr=True)

# Unlock all axes / axis
nounicode=str(newcam[0]).split("'")
camNoUnicode = "{}.".format(nounicode[0])
axis = ['X', 'Y', 'Z']
attrs = ['translate', 'rotate', 'scale']
for ax in axis:
    for attr in attrs:
        cmds.setAttr(camNoUnicode+attr+ax, lock=0)

# Move it to world-space and rename it
if (cmds.listRelatives(newcam, p=True) != None):
	cmds.parent(newcam, world=True)
	
cmds.select( newcam, r=True )
locatorParent = cmds.rename( 'scale_me' )

# Create and parent a locator
pointInWorld = cmds.spaceLocator(n="pointInWorld")
cmds.parent(pointInWorld, locatorParent, relative=True)
pointInWorld = str(pointInWorld[0]).split("'")
pointInWorld = "{}.translateZ".format(pointInWorld[0])


# Get image plane distance and halves it

if cmds.nodeType(cam) == 'transform':
    dagNode = cmds.listRelatives(cam, s=True, c=True)[0]

# get all the imageplane nodes connected to image plane
sourceConnections = cmds.listConnections(cam[0] + '.imagePlane', source = True, type = 'imagePlane') or []

# collect all the 'imageName(s)' into a list and return it
imageNames = []
imageDepth = []
for lc in sourceConnections:
   atribVal1=cmds.getAttr(lc+".imageName")
   atribVal2=cmds.getAttr(lc+".depth")/2
   
   imageNames.append(atribVal1)
   locatorScale = atribVal2/10
   locatorDistance = atribVal2*-1

cmds.setAttr(pointInWorld, locatorDistance)
# Sets scale 
cmds.setAttr("pointInWorld.scaleX", locatorScale)
cmds.setAttr("pointInWorld.scaleY", locatorScale)
cmds.setAttr("pointInWorld.scaleZ", locatorScale)



#MSB 241018




